DROP TABLE IF EXISTS films, users, genres, MPA_ratings, film_genres, film_likes, user_friends;
CREATE TABLE IF NOT EXISTS MPA_ratings (
    MPA_rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR NOT NULL,
    CONSTRAINT IF NOT EXISTS MPA_ratings_unique UNIQUE(name),
    PRIMARY KEY (MPA_rating_id)
);
CREATE TABLE IF NOT EXISTS films (
    film_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR NOT NULL,
    description VARCHAR(200),
    release_date DATE,
    duration INTEGER,
    MPA_rating_id INTEGER REFERENCES MPA_ratings,
    CONSTRAINT IF NOT EXISTS unique_films UNIQUE (name,description,release_date,duration,MPA_rating_id),
    PRIMARY KEY (film_id)
);
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    email VARCHAR NOT NULL,
    login VARCHAR NOT NULL,
    name VARCHAR,
    birthday DATE,
    CONSTRAINT IF NOT EXISTS unique_users UNIQUE(email,login),
    PRIMARY KEY (user_id)
);
CREATE TABLE IF NOT EXISTS genres (
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR NOT NULL,
    CONSTRAINT IF NOT EXISTS unique_genre UNIQUE(name),
    PRIMARY KEY (genre_id)
);
CREATE TABLE IF NOT EXISTS film_genres (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    film_id INTEGER NOT NULL REFERENCES films(film_id) ON DELETE CASCADE ON UPDATE CASCADE,
    genre_id INTEGER NOT NULL REFERENCES genres(genre_id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT IF NOT EXISTS film_genres_unique UNIQUE (film_id, genre_id),
    PRIMARY KEY (id)
);
CREATE TABLE IF NOT EXISTS film_likes (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    film_id INTEGER NOT NULL REFERENCES films(film_id) ON DELETE CASCADE ON UPDATE CASCADE,
    user_who_liked_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT IF NOT EXISTS film_likes_unique UNIQUE (film_id, user_who_liked_id),
    PRIMARY KEY (id)
);
CREATE TABLE IF NOT EXISTS user_friends(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    friend_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    is_confirmed BOOLEAN,
    CONSTRAINT IF NOT EXISTS user_friends_unique UNIQUE (user_id, friend_id),
    PRIMARY KEY(id)
);